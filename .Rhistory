curve(dbinom(10, size = 10, prob = 0.8))
dbinom(10, size = 10, prob = 0.8)
n=10; p=0.3; k=seq(0,n)
plot(k, dbinom(k,n,p), type='h', main='dbinom(0:20, n=10, p=0.3)', xlab='k')
plot(dbinom(10, size = 10, prob = 0.8))
plot(k, dbinom(10, size = 10, prob = 0.8))
plot(dbinom(1:10, size = 10, prob = 0.8))
plot(dbinom(1:10, size = 20, prob = 0.8))
plot(dbinom(1:100, size = 20, prob = 0.8))
plot(dbinom(1:100, size = 20, prob = 0.8), xlab='k')
plot(dbinom(1:100, size = 20, prob = 0.8), type='h',xlab='k')
plot(1:100, dbinom(1:100, size = 20, prob = 0.8), type='h',xlab='k')
plot(dbinom(1:100, size = 20, prob = 0.8), type='h',xlab='k')
qnorm(0.01/2)
qnorm(0.01)
qnorm(0.01, lower.tail = F)
dbinom(0, size = 10, prob = 2)
dbinom(0, size = 10, prob = .2)
rbinom(10, 1, .5)
c("H", "T")[1 + rbinom(10, 1, .5)]
plot(k, dbinom(k,n,p), type=1, main='dbinom(0:20, n=10, p=0.3)', xlab='k')
plot(rno,rnorm(10), type = "o")
plot(rnorm(10), type = "o")
plot(rnorm(10), type = "o", bg="white")
plot(rnorm(10), type = "o", pch= 21, bg="white")
plot(rnorm(10), type = "o", pch= 20)
x1 <- rnorm(20)
x2 <- rnorm(10)+1
q1 <- qqnorm(x1, plot.it = F)
View(q1)
q1
qqnorm(x1, plot.it = F)
qqnorm(x1, plot.it = F)
qqnorm(x1, plot.it = T)
x1 <- rnorm(20)
x2 <- rnorm(10)+1
q1 <- qqnorm(x1, plot.it = F)
q2 <- qqnorm(x2, plot.it = F)
xr <- range(q1$x, q2$x)
yr <- range(q1$y, q2$y)
qqnorm(x1, xlim = xr, ylim = yr)
points(q2, col= "2")
hist(react)
z <- runif(5)
curve(quantile(z, x), from = 0, to = 1)
x
x <- 1
z <- runif(5)
curve(quantile(z, x), from = 0, to = 1)
quantile(z, x)
x <- .5
quantile(z, x)
curve(quantile(z, 1), from = 0, to = 1)
library(rmr)
install.packages("rMR")
library("rMR", lib.loc="~/R/win-library/3.5")
rmr
rMR::
fit <-  lm(metabolic.rate ~ body.weight, data = rmr)
head(iris,5)
detach("package:rMR", unload=TRUE)
library("rMR", lib.loc="~/R/win-library/3.5")
fit <-  lm(metabolic.rate ~ body.weight, data = rMR)
fit <-  lm(metabolic.rate ~ body.weight, data = "rMR")
fit <-  lm(metabolic.rate ~ body.weight, data = iris)
data <- data.frame(predictor = c(1,2,3,4,5,6),
model <- lm(dv ~ predictor, subset = id, data = data)
summary(model)
data <- data.frame(predictor = c(1,2,3,4,5,6),
dv = c(5,3,5,6,6,1),
id = c(1,2,3,1,2,3))
data <- data.frame(predictor = c(1,2,3,4,5,6),
dv = c(5,3,5,6,6,1),
id = c(1,2,3,1,2,3))
model <- lm(dv ~ predictor, subset = id, data = data)
summary(model)
model <- lm(dv ~ predictor, subset = id, data = data)
lm(dv ~ predictor, subset = id, data = data)
lm(dv ~ predictor, subset = id, data = data)$model
lm(dv ~ predictor, subset = id == 1, data = data)$model
x =cbind(x1=3, x2=c(2:1,4:5))
sapply(x, sum)
sapply(data.frame(x), sum)
x
sapply(x, sum, 1)
sapply(data.frame(x), sum)
sapply(data.frame(x), sum, 1)
class(lapply(x, sum))
class(sapply(x, sum))
library(gplots)attach(mtcars)cyl <- factor(cyl)plotmeans(mpg~cyl,xlab="Number of Cylinders",  ylab="Miles Per Gallon", main="Mean Plot\nwith 95% CI")
set.seed(2)
set.seed(1)
# par(mfcol = c(1, 2))
# qplot(sbp, age, data = sbp); qplot(sbp, chol, data = sbp)
library(showtext)
showtext.auto(enable = TRUE)
font.add("標楷體", "微軟正黑體")
font.add("微軟正黑體")
font.add("微軟正黑體", "微軟正黑體.otf")
font.families()
setwd("~/Reg")
library(data.table)
library(dplyr)
library(showtext)
sbp <- fread("sbp100.csv")
###################
####描述性統計#####
###################
summary(sbp)
numSummary(sbp, statistics=c("mean", "sd", "se(mean)", "IQR", "quantiles", "cv"), quantiles=c(0,.25,.5,.75,1))
###################
####成對散布圖#####
###################
sbpy <- sbp %>% select(sbp, age, chol, smoke)
sbpy <- as.data.frame(sbpy)
showtext.auto(enable = TRUE)
font.add("微軟正黑體", "微軟正黑體.otf")
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, ...)
}
pairs(sbpy[, 1:3], col= as.integer(sbpy[, 4])+ 2,
panel = panel.smooth,
diag.panel = panel.hist, cex.labels = 2, font.labels = 2,
labels = c("舒張壓", "年齡", "血清單固醇值"),
family = "wqy-microhei")
font.add("msjh", "msjh.ttc")
warnings()
font.add("NotoSan", "NotoSansMonoCJKtc-Regular.otf")
pairs(sbpy[, 1:3], col= as.integer(sbpy[, 4])+ 2,
panel = panel.smooth,
diag.panel = panel.hist, cex.labels = 2, font.labels = 2,
labels = c("舒張壓", "年齡", "血清單固醇值"),
family = "NotoSan")
font.add("標楷體", "kaiu.ttf")
warnings()
font.add("kaiu", "kaiu.ttf")
pairs(sbpy[, 1:3], col= as.integer(sbpy[, 4])+ 2,
panel = panel.smooth,
diag.panel = panel.hist, cex.labels = 2, font.labels = 2,
labels = c("舒張壓", "年齡", "血清單固醇值"),
family = "kaiu")
pairs(sbpy[, 1:3], col= as.integer(sbpy[, 4])+ 2,
panel = panel.smooth,
diag.panel = panel.hist, cex.labels = 2, font.labels = 2,
labels = c("舒張壓", "年齡", "血清單固醇值"),
family = "kaiu")
warnings()
font.families()
install.packages(GGally)
install.packages("GGally")
library(GGally)
ggpairs(sbpy[, 1:3])
##################
###相關係數矩陣###
##################
cor(sbpy[, 1:3])
library("Hmisc", lib.loc="~/R/win-library/3.5")
rcorr(sbpy[, 1:3])
rcorr(as.matrix(sbpy[, 1:3]))
##############
###簡單回歸###
##############
# 寫一個FUN
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat) data.frame( row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]], cor =(cormat)[ut], p = pmat[ut] )
}
upper.tri(cormat)
##############
###簡單回歸###
##############
# 寫一個FUN
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat) data.frame( row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]], cor =(cormat)[ut], p = pmat[ut] )
}
##############
###簡單回歸###
##############
# 寫一個FUN
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame( row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]], cor =(cormat)[ut], p = pmat[ut] )
}
corre <- rcorr(as.matrix(sbpy[, 1:3]))
corre
flattenCorrMatrix(corre$r, corre$P)
# 合併相關係數跟P值為一個矩陣
corre_ALL <- flattenCorrMatrix(corre$r, corre$P)
dim(corre_ALL)
corre_ALL[, 4] <0.05
corre_ALL[corre_ALL[, 4] <0.05, 5] <- "corre_ALL"
View(corre_ALL)
corre_ALL[corre_ALL[, 4] <0.05, 5] <- "*"
corre_ALL[corre_ALL[, 4] <0.01, 5] <- "**"
corre_ALL[corre_ALL[, 4] <0.001, 5] <- "***"
View(corre_ALL)
##############
###簡單回歸###
##############
model1 <- with(lm(sbp ~ age))
##############
###簡單回歸###
##############
model1 <- with(lm(sbp ~ age, data = sbpy))
##############
###簡單回歸###
##############
model1 <- lm(sbp ~ age, data = sbpy)
install.packages("corrplot")
library(corrplot)
corrplot(corre, type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corre <- rcorr(as.matrix(sbpy[, 1:3]))
corrplot(corre, type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
mode(corre)
corrplot(cor(sbpy[, 1:3]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
png(file = "myplot.png", bg = "transparent")
corrplot(cor(sbpy[, 1:3]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
dev.off()
model1
model2
model2 <- lm(sbp ~ chol, data = sbpy)
model2
model1$coefficients
model1$residuals
ggplot(model1)
fig <- ggplot(sbpy, aes(x = age, y = sbp))
fig + geom_point()+
geom_smooth(method = "lm")
##############
###簡單回歸###
##############
model1 <- lm(sbp ~ age, data = sbpy)
png(file = "myplot.png", bg = "transparent")
fig + geom_point()+
geom_smooth(method = "lm")
dev.off()
pdf(file = "myplot.pdf", bg = "transparent")
fig + geom_point()+
geom_smooth(method = "lm")
dev.off()
pdf(file = "myplot.pdf", bg = "transparent")
corrplot(cor(sbpy[, 1:3]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
dev.off()
View(corre)
cor(sbpy[, 1:3])
summary(model1)
# 算信賴區間 自由度98的T分布
qt(0.975, 98)
model1
model1$coefficients
model1$model
model1$effects
mode(summary(model1))
c(96.68322 - qt(0.975, 98)*4.03455, 96.68322 + qt(0.975, 98)*4.03455)
summary(model1)
B1_cofin <- c(0.60657 - qt(0.975, 98)*0.07916, 0.60657 + qt(0.975, 98)*0.07916)
summary(model2)
# 繪圖 用另一種方法
install.packages("ggpubr")
# 繪圖 用另一種方法
# install.packages("ggpubr")
library(ggpubr)
# 繪圖 用另一種方法
# install.packages("ggpubr")
library(ggpubr)
ggscatter(df, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = "green", fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
# 繪圖 用另一種方法
# install.packages("ggpubr")
library(ggpubr)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 6, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 7, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 8, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 9, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 10, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 12, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray"),
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
# 繪圖 用另一種方法
# install.packages("ggpubr")
library(ggpubr)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
#############
###  AIC  ###
#############
install.packages("car")
#############
###  AIC  ###
#############
# install.packages("car")
library(car)
cr.plot(model1, sbpy$age)
sbpy$age
age <- sbpy$age
cr.plot(model1, age)
help("Defunct")
View(sbpy)
av.plot(model1, age)
av.plot(model1, "age")
#############
###  AIC  ###
#############
# install.packages("car")
library(car)
age <- sbpy$age
av.plot(model1, "age")
avPlot(model1, "age")
chol <- sbpy$chol
par(mfcol = c(1,2))
avPlot(model1, "age")
avPlot(model2, "chol")
###############
###複回歸模型##
###############
model_M <- lm(sbp ~ age + chol, data = sbpy)
summary(model_M)
par(mfcol = c(1,2))
avPlot(model1, "chol"); avPlot(model2, "age")
par(mfcol = c(1,2))
avPlot(model1, "chol"); avPlot(model2, "age")
age <- sbpy$age
chol <- sbpy$chol
par(mfcol = c(1,2))
avPlot(model1, "chol"); avPlot(model2, "age")
avPlot(model_M, "age")
avPlot(model_M, "age"); avPlot(model_M, "chol")
par(mfcol = c(1,2))
par(mfcol = c(1,2))
avPlot(model_M, "age"); avPlot(model_M, "chol")
avPlot(model1, "age"); avPlot(model2, "chol")
avPlot(model_M, "age"); avPlot(model_M, "chol")
avPlot(model1, "age"); avPlot(model2, "chol")
avPlot(model_M, "age"); avPlot(model_M, "chol")
crPlot(model_M, "age"); crPlot(model_M, "chol")
summary(model_M)
confint(model2, "chol", level = 0.95)
confint(model2, "chol", level = 0.975)
B0_cofin <- c(105.80713 - qt(0.975, 98)*7.68916, 105.80713 + qt(0.975, 98)*7.68916)
B1_cofin <- c(0.09231 - qt(0.975, 98)*0.03499, 0.09231 + qt(0.975, 98)*0.03499)
B1_cofin
confint(model2, "chol", level = 0.95)
B1_cofin
summary(model_M)
# 繪圖 用另一種方法
# install.packages("ggpubr")
library(ggpubr)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = 11, fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = "#2980B9", fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 25, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = "#2980B9", fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 150)
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = "#2980B9", fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 30, label.y = 150)
# 繪圖
fig <- ggplot(sbpy, aes(x = age, y = sbp))
fig + geom_point(color= "#2980B9")+
geom_smooth(method = "lm", color='#2C3E50')
ggscatter(sbpy, x = "age", y = "sbp",
add = "reg.line", conf.int = TRUE,
add.params = list(color = "#2980B9", fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 30, label.y = 150)
confint(model_M)
data.ellipse(sbpy$age, sbpy$sbp, levels=c(0.5, 0.975))
dataEllipse(sbpy$age, sbpy$sbp, levels=c(0.5, 0.975))
par()
par(mfcol = 1)
par(mfcol = c(1, 1))
dataEllipse(sbpy$age, sbpy$sbp, levels=c(0.5, 0.975))
dataEllipse(c(sbpy$age, sbpy$chol), sbpy$sbp, levels=c(0.5, 0.975))
anova(model_M)
1111 <- anova(model_M)
ttt <- anova(model_M)
ttt$Df
ttt$`F value`
